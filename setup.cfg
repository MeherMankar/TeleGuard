[metadata]
name = teleguard
version = attr: teleguard.__version__
description = Professional Telegram Account Manager with OTP Destroyer Protection
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/MeherMankar/TeleGuard
author = Meher Mankar, Gutkesh
author_email = meherpatil84@gmail.com, mirrorbot01@gmail.com
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: End Users/Desktop
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Communications :: Chat
    Topic :: Security
    Topic :: System :: Systems Administration

[options]
packages = find:
python_requires = >=3.8
include_package_data = True
zip_safe = False
install_requires =
    telethon>=1.28.5
    cryptography>=43.0.1
    aiosqlite>=0.19.0
    sqlalchemy[asyncio]>=2.0.19
    argon2-cffi>=23.1.0
    pymongo>=4.6.3
    python-dotenv>=1.0.0
    aiohttp>=3.9.0
    APScheduler>=3.10.4
    python-gnupg>=0.5.2
    aiofiles>=23.1.0
    pydantic>=2.0.0
    psutil>=5.9.5

[options.packages.find]
exclude =
    tests*
    docs*
    examples*
    scripts*

[options.entry_points]
console_scripts =
    teleguard = teleguard.main:main

[options.extras_require]
dev =
    pytest>=7.4.0
    pytest-asyncio>=0.21.1
    pytest-cov>=4.1.0
    black>=23.3.0
    isort>=5.12.0
    flake8>=6.0.0
    mypy>=1.4.0
    bandit>=1.7.5
    safety>=2.3.0
    pre-commit>=3.3.3

# flake8 configuration
[flake8]
max-line-length = 88
max-complexity = 10
select = E,W,F,C,N
ignore = E203,E501,W503,E402,F401
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .mypy_cache,
    .tox,
    .venv,
    venv,
    build,
    dist,
    *.egg-info,
    migrations,
    docs,
    examples,
    scripts
per-file-ignores =
    __init__.py:F401
    tests/*:S101,S106
    examples/*:S106
    scripts/*:S106
statistics = True
count = True
show-source = True
doctests = True

# pytest configuration (backup - main config in pyproject.toml)
[tool:pytest]
minversion = 7.0
addopts = -ra -q --strict-markers --strict-config
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto

# mypy configuration (backup - main config in pyproject.toml)
[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-telethon.*]
ignore_missing_imports = True

[mypy-cryptography.*]
ignore_missing_imports = True

[mypy-pymongo.*]
ignore_missing_imports = True

[mypy-gnupg.*]
ignore_missing_imports = True

# isort configuration (backup - main config in pyproject.toml)
[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = teleguard
known_third_party = telethon,cryptography,sqlalchemy,aiohttp
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
force_alphabetical_sort_within_sections = True
combine_as_imports = True
force_grid_wrap = 0
include_trailing_comma = True
use_parentheses = True

# coverage configuration (backup - main config in pyproject.toml)
[coverage:run]
source = teleguard
omit =
    */tests/*
    */examples/*
    */scripts/*
    */migrations/*
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
show_missing = True
precision = 2

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
